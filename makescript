/* Target constants */
var isoOutput = "boot.iso";
var isoDir = "mount/";
var bootsect = "boot/bootsect.bin";
var bootmgr = "mount/saki/bootmgr/bootmgr.bin";
var bootmgrjs = "mount/saki/bootmgr/js.ske";
var libraries = [];

ls("libs").forEach(function(f){
	if(isDir("libs/"+f)){
		libraries.push(f);
	}
});

var libArchieve=libraries.map(function(lib){
	return "bin/libs/"+lib+".a";
});

var libPath=libraries.map(function(lib){
	return "libs/"+lib;
});

/* Helper functions */
function makeISO(output, dir, booter) {
	exec("xorriso", [
		"-as", "mkisofs", "-R", "-J", "-c", "boot/bootcat",
		"-b", booter, "-no-emul-boot", "-boot-load-size", "4",
		"-o", output, dir
	]);
}

function nasmRaw(dest, src) {
	exec("nasm", src.concat(["-o", dest]));
}

function qemu(cdrom, debug) {
	var args = ["-cdrom", cdrom, "-m", "1G"];
	if (debug)
		args.push("-s", "-S");
	exec("qemu-system-x86_64", args);
}

function hexdump() {
	exec("hexdump -C boot.iso |less", null, {
		newWindow: true
	});
}

/* Targets */
setDefault("everything");

phony("everything", libArchieve.concat(isoOutput));

phony("clean", function() {
	make("bootmgr", "clean");
	libPath.forEach(function(lib){
		make(lib, "clean");
	});
	rm([isoOutput, isoDir + bootsect], ["r", "f"]);
});

phony("all", ["clean", "everything"]);

phony("run", ["everything", $(qemu, isoOutput, false)]);

phony("debug", ["everything", $(qemu, isoOutput, true)]);

phony("dumpiso", hexdump);

target(isoOutput, [isoDir + bootsect, bootmgr, bootmgrjs,
	function(target, dep) {
		makeISO(target, isoDir, bootsect);
	}
]);

target(isoDir + bootsect, ["boot.asm", nasmRaw]);

target(bootmgr, libArchieve.concat(["bootmgr", $make("bootmgr")]));

target(bootmgrjs, ["bootmgr", $make("bootmgrjs")]);

libPath.forEach(function(lib, id){
	target(libArchieve[id], [lib, $make(lib)]);
});

/* Check whether the mount folder exists.
 * If not, create a new one */
mkdirIfNotExist(isoDir);
mkdirIfNotExist(isoDir + "/boot");
mkdirIfNotExist(isoDir + "/saki");
mkdirIfNotExist(isoDir + "/saki/bootmgr");
mkdirIfNotExist("bin");
